name: Release

on:
  push:
    branches:
      - master
  workflow_dispatch:

concurrency: ${{ github.workflow }}-${{ github.ref }}
env:
  NODE_VERSION: 24.7.0
  PNPM_VERSION: 10.17.1

jobs:
  detect-changes:
    name: Detect Changes
    outputs:
      src: ${{ steps.path-filter.outputs.src }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - id: path-filter
        uses: ./.github/actions/path-filter
  install-dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v5
      - name: Setup environment
        uses: ./.github/actions/env-setup
        with:
          node-version: ${{ env.NODE_VERSION }}
          pnpm-version: ${{ env.PNPM_VERSION }}
  lint:
    name: Lint
    runs-on: ubuntu-latest
    if: ${{ needs.detect-changes.outputs.src == 'true' || github.event.inputs.force_deploy == true }}
    needs: [detect-changes, install-dependencies]
    steps:
      - name: Git Checkout
        uses: actions/checkout@v5
      - name: Setup environment
        uses: ./.github/actions/env-setup
        with:
          node-version: ${{ env.NODE_VERSION }}
          pnpm-version: ${{ env.PNPM_VERSION }}
      - name: Lint
        run: |
          pnpm lint
  resolve-playwright-version:
    name: Resolve Playwright Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps['resolve-playwright-version'].outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: resolve-playwright-version
        id: resolve-playwright-version
        run: |
          version="$(yq -r '.devDependencies["playwright"] // .dependencies["playwright"] // ""' package.json)"
          test -n "$version" || { echo "No playwright version found in package.json"; exit 1; }
          echo "version=$version" >> "$GITHUB_OUTPUT"

  test:
    runs-on: ubuntu-latest
    name: Test
    if: ${{ needs.detect-changes.outputs.src == 'true' || github.event.inputs.force_deploy == true }}
    needs: [resolve-playwright-version, detect-changes]
    timeout-minutes: 15
    container:
      image: mcr.microsoft.com/playwright:v${{ needs['resolve-playwright-version'].outputs.version }}
      options: --user 1001
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup environment
        uses: ./.github/actions/env-setup
        with:
          node-version: ${{ env.NODE_VERSION }}
          pnpm-version: ${{ env.PNPM_VERSION }}
      - name: Test
        run: pnpm test
  release:
    name: Create or Update Release PR
    runs-on: ubuntu-latest
    needs: [lint, test, install-dependencies]
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Create or Update Release Pull Request (no publishing)
        uses: changesets/action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
