name: Pull Request
on:
  pull_request: null
  workflow_dispatch:
    inputs:
      force_deploy:
        default: false
        description: Force run all jobs
        required: false
        type: boolean

concurrency:
  cancel-in-progress: true
  group: ${{ github.head_ref }}

env:
  NODE_VERSION: 24.7.0
  PNPM_VERSION: 10.17.1

jobs:
  detect-changes:
    name: Detect Changes
    outputs:
      src: ${{ steps.path-filter.outputs.src }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - id: path-filter
        uses: ./.github/actions/path-filter
  install-dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v5
      - name: Setup environment
        uses: ./.github/actions/env-setup
        with:
          node-version: ${{ env.NODE_VERSION }}
          pnpm-version: ${{ env.PNPM_VERSION }}
  lint:
    name: Lint
    runs-on: ubuntu-latest
    if: ${{ needs.detect-changes.outputs.src == 'true' || github.event.inputs.force_deploy == true }}
    needs: [detect-changes, install-dependencies]
    steps:
      - name: Git Checkout
        uses: actions/checkout@v5
      - name: Setup environment
        uses: ./.github/actions/env-setup
        with:
          node-version: ${{ env.NODE_VERSION }}
          pnpm-version: ${{ env.PNPM_VERSION }}
      - name: Lint
        run: |
          pnpm lint
  resolve-playwright-version:
    name: Resolve Playwright Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps['resolve-playwright-version'].outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: resolve-playwright-version
        id: resolve-playwright-version
        run: |
          version="$(yq -r '.devDependencies["playwright"] // .dependencies["playwright"] // ""' package.json)"
          test -n "$version" || { echo "No playwright version found in package.json"; exit 1; }
          echo "version=$version" >> "$GITHUB_OUTPUT"

  test:
    runs-on: ubuntu-latest
    name: Test
    if: ${{ needs.detect-changes.outputs.src == 'true' || github.event.inputs.force_deploy == true }}
    needs: [resolve-playwright-version, detect-changes]
    timeout-minutes: 15
    container:
      image: mcr.microsoft.com/playwright:v${{ needs['resolve-playwright-version'].outputs.version }}
      options: --user 1001
    steps:
      - name: Git Checkout
        uses: actions/checkout@v5
      - name: Setup environment
        uses: ./.github/actions/env-setup
        with:
          node-version: ${{ env.NODE_VERSION }}
          pnpm-version: ${{ env.PNPM_VERSION }}
      - name: Test
        run: pnpm test
  publish:
    name: Publish
    environment: STAGING
    needs: [install-dependencies]
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4
      - name: Setup environment
        uses: ./.github/actions/env-setup
        with:
          node-version: ${{ env.NODE_VERSION }}
          pnpm-version: ${{ env.PNPM_VERSION }}
      - env:
          IS_CI: false
        name: Build
        run: |
          pnpm build
      - name: Publish Web App
        uses: cloudflare/wrangler-action@v3
        with:
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          command: pages deploy
          # Optional: Enable this if you want to have GitHub Deployments triggered
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          packageManager: pnpm
